# Определяем upstream сервер для Gunicorn (нашего Django приложения)
# 'web' - это имя сервиса в docker-compose.yml
# 8000 - порт, который открыт (expose) в сервисе 'web'
upstream django_server {
    server web:8000;
}

# Определяем upstream сервер для Flower
# 'flower' - имя сервиса в docker-compose.yml
# 5555 - порт, который открыт (expose) в сервисе 'flower'
upstream flower_server {
    server flower:5555;
}

# Основная конфигурация сервера, слушающего на порту 80
server {
    listen 80;
    # server_name your_domain.com www.your_domain.com; # Раскомментируйте и замените на ваш домен для production

    # Увеличиваем максимальный размер тела запроса (например, для загрузки файлов)
    client_max_body_size 20M;

    # Настройка для статических файлов Django
    location /static/ {
        # Путь должен совпадать с тем, что используется в volumes и collectstatic
        alias /home/appuser/web/staticfiles/;
        # Устанавливаем длительное кэширование для статики
        expires 1y;
        add_header Cache-Control "public";
        access_log off; # Отключаем логирование доступа для статики (опционально)
    }

    # Настройка для медиа файлов Django
    location /media/ {
        # Путь должен совпадать с тем, что используется в volumes и настройках MEDIA_ROOT
        alias /home/appuser/web/media/;
        # Кэширование для медиа можно настроить по-другому, если нужно
        expires 7d;
        add_header Cache-Control "public";
    }

    # Настройка для проксирования запросов к Flower
    location /flower/ {
        # Добавляем слэш в конце, чтобы правильно обрабатывать пути внутри Flower
        proxy_pass http://flower_server;

        # Передаем необходимые заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Настройки для WebSocket (если Flower их использует для обновлений)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Можно добавить базовую аутентификацию для Flower
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/htpasswd_flower; # Потребуется создать этот файл
    }

    # Проксируем все остальные запросы к Gunicorn/Django
    location / {
        proxy_pass http://django_server;

        # --- ИЗМЕНЕНИЯ ЗДЕСЬ ---
        proxy_set_header Host $http_host; # Используем $http_host
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Передаем оригинальную схему (http/https)
        proxy_set_header X-Forwarded-Proto $scheme;
        # Передаем оригинальный порт, на который слушает Nginx
        proxy_set_header X-Forwarded-Port $server_port;
        # proxy_set_header X-Forwarded-Host $host; # Можно и так, но Host $http_host обычно достаточно

        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
  
}
    